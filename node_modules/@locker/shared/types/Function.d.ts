import type { ProxyTrapInvokers } from './types';
export declare const FunctionProtoBind: (this: Function, thisArg: any, ...argArray: any[]) => any, FunctionProtoToString: () => string;
export declare function isProxyMaskedFunction(value: any): boolean;
export declare function noop(): void;
export declare function proxyMaskFunction<T extends Function>(func: Function, maskFunc: T, trapInvokers?: ProxyTrapInvokers): T;
export declare function identity<T>(value: T): T;
//# sourceMappingURL=Function.d.ts.map