import type { Getter, Setter } from '@locker/shared/types';
import type { ScriptElement, ScriptEvaluatorPropertyCallback } from './types';
export declare const SCRIPT_HOOK_SOURCE_TEXT: string;
export declare function defineScriptAccessorProperty(script: ScriptElement, propKey: PropertyKey, getter: Getter, setter: Setter): void;
export declare function defineScriptEvaluatorProperty(script: ScriptElement, callback: ScriptEvaluatorPropertyCallback): void;
export declare function deleteOriginalTextContent(script: ScriptElement): void;
export declare function deleteResolvedScriptURL(script: ScriptElement): void;
export declare function deleteScriptEvaluatorProperty(script: ScriptElement): void;
export declare function getOriginalScriptTextContent(script: ScriptElement): string | undefined;
export declare function getResolvedScriptURL(script: ScriptElement, attributeName: string): string | undefined;
export declare function getScriptSrcEvaluatorHookURL(): string;
export declare function isScriptEvaluated(script: ScriptElement): boolean;
export declare function isScriptURLEvaluatorHookDefined(script: ScriptElement): boolean;
export declare function isTextContentEvaluatorHookDefined(script: ScriptElement): boolean;
export declare function setOriginalScriptTextContent(script: ScriptElement, textContent: string): WeakMap<ScriptElement, string>;
export declare function setResolvedScriptURL(script: ScriptElement, attributeName: string, resolvedURL: string): void;
export declare function trackScriptAsEvaluated(script: ScriptElement): void;
//# sourceMappingURL=script-utils.d.ts.map