import type { EvaluateOptions, OpaqueWindowRecordOptions, RootWindowRecordOptions, SandboxRecord, SecondaryWindowRecordOptions } from '../types';
export declare function createRootWindowSandboxRecord({ context, endowments, instrumentation, key, type, verboseInstrumentation, }: RootWindowRecordOptions): SandboxRecord;
export declare function createOpaqueSecondaryWindowSandboxRecord({ globalObject, key, type, }: OpaqueWindowRecordOptions, root: SandboxRecord): SandboxRecord;
export declare function createSecondaryWindowSandboxRecord({ globalObject, document, context, key, type, }: SecondaryWindowRecordOptions, root: SandboxRecord): SandboxRecord;
export declare function internalEvaluateInSandbox(evaluateOptions: EvaluateOptions): any;
//# sourceMappingURL=record.d.ts.map