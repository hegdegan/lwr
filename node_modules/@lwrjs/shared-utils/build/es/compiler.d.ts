import type { CompilerResult, LwrLockerConfig, ModuleCompiled } from '@lwrjs/types';
/**
 * When importing these modules make sure the optional dependencies are installed:
 * - 'rollup' for convertToAmd()
 * - '@locker/compiler' for lockerize()
 */
export declare const AMD_DEFINE = "LWR.define";
export declare function convertToAmd(source: string, { id }: {
    id: string;
}, forceNamedExports?: boolean): Promise<CompilerResult>;
/** Locker
 * Trusted Components can contain namespaces with wildcard or single component
 */
export declare function lockerize({ compiledSource: source, specifier, moduleEntry: { entry: filename } }: ModuleCompiled, { trustedComponents }: LwrLockerConfig, sourcemap?: boolean): CompilerResult;
//# sourceMappingURL=compiler.d.ts.map